% This script is written and read by pdetool and should NOT be edited.
% There are two recommended alternatives:
% 1) Export the required variables from pdetool and create a MATLAB script
%    to perform operations on these.
% 2) Define the problem completely using a MATLAB script. See
%    http://www.mathworks.com/help/pde/examples/index.html for examples
%    of this approach.
function flowNet
[pde_fig,ax]=pdeinit;
pdetool('appl_cb',10);
pdetool('snapon','on');
set(ax,'DataAspectRatio',[25 15 1]);
set(ax,'PlotBoxAspectRatio',[1 0.52534113060428844 0.52534113060428844]);
set(ax,'XLim',[-25 25]);
set(ax,'YLim',[0 30]);
set(ax,'XTick',[ -25,...
 -24,...
 -23,...
 -22,...
 -21,...
 -20,...
 -19,...
 -18,...
 -17,...
 -16,...
 -15,...
 -14,...
 -13,...
 -12,...
 -11,...
 -10,...
 -9,...
 -8,...
 -7,...
 -6,...
 -5,...
 -4,...
 -3,...
 -2,...
 -1,...
 0,...
 1,...
 2,...
 3,...
 4,...
 5,...
 6,...
 7,...
 8,...
 9,...
 10,...
 11,...
 12,...
 13,...
 14,...
 15,...
 16,...
 17,...
 18,...
 19,...
 20,...
 21,...
 22,...
 23,...
 24,...
 25,...
]);
set(ax,'YTick',[ 0,...
 1,...
 2,...
 3,...
 4,...
 5,...
 6,...
 7,...
 8,...
 9,...
 10,...
 11,...
 12,...
 13,...
 14,...
 15,...
 16,...
 17,...
 18,...
 19,...
 20,...
 21,...
 22,...
 23,...
 24,...
 25,...
 26,...
 27,...
 28,...
 29,...
 30,...
]);
pdetool('gridon','on');

% Geometry description:
pdepoly([ -20,...
 -6,...
 -6,...
 6,...
 6,...
 20,...
 20,...
 -20,...
],...
[ 25,...
 25,...
 20,...
 14,...
 25,...
 25,...
 2,...
 2,...
],...
 'P1');
set(findobj(get(pde_fig,'Children'),'Tag','PDEEval'),'String','P1')

% Boundary conditions:
pdetool('changemode',0)
pdesetbd(8,...
'dir',...
1,...
'1',...
'2')
pdesetbd(7,...
'dir',...
1,...
'1',...
'10')
pdesetbd(6,...
'neu',...
1,...
'0',...
'0')
pdesetbd(5,...
'neu',...
1,...
'0',...
'0')
pdesetbd(4,...
'neu',...
1,...
'0',...
'0')
pdesetbd(3,...
'neu',...
1,...
'0',...
'0')
pdesetbd(2,...
'neu',...
1,...
'0',...
'0')
pdesetbd(1,...
'neu',...
1,...
'0',...
'0')

% Mesh generation:
setappdata(pde_fig,'Hgrad',1.3);
setappdata(pde_fig,'refinemethod','regular');
setappdata(pde_fig,'jiggle',char('on','mean',''));
setappdata(pde_fig,'MesherVersion','preR2013a');
pdetool('initmesh')
pdetool('refine')
pdetool('refine')
pdetool('jiggle')
pdetool('refine')
pdetool('jiggle')

% PDE coefficients:
pdeseteq(1,...
'1.0',...
'0.0',...
'0',...
'1.0',...
'0:10',...
'0.0',...
'0.0',...
'[0 100]')
setappdata(pde_fig,'currparam',...
['1.0';...
'0  '])

% Solve parameters:
setappdata(pde_fig,'solveparam',...
char('0','17088','10','pdeadworst',...
'0.5','longest','0','1e-4','','fixed','inf'))

% Plotflags and user data strings:
setappdata(pde_fig,'plotflags',[1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1]);
setappdata(pde_fig,'colstring','');
setappdata(pde_fig,'arrowstring','');
setappdata(pde_fig,'deformstring','');
setappdata(pde_fig,'heightstring','');

% Solve PDE:
pdetool('solve')
